ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"I2C_1_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2C_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	I2C_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	I2C_1_ISR, %function
  25              	I2C_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\I2C_1_INT.c"
   1:Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/I2C_1_INT.c **** * File Name: I2C_1_INT.c
   3:Generated_Source\PSoC5/I2C_1_INT.c **** * Version 3.50
   4:Generated_Source\PSoC5/I2C_1_INT.c **** *
   5:Generated_Source\PSoC5/I2C_1_INT.c **** * Description:
   6:Generated_Source\PSoC5/I2C_1_INT.c **** *  This file provides the source code of Interrupt Service Routine (ISR)
   7:Generated_Source\PSoC5/I2C_1_INT.c **** *  for the I2C component.
   8:Generated_Source\PSoC5/I2C_1_INT.c **** *
   9:Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/I2C_1_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC5/I2C_1_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/I2C_1_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/I2C_1_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/I2C_1_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/I2C_1_INT.c **** 
  16:Generated_Source\PSoC5/I2C_1_INT.c **** #include "I2C_1_PVT.h"
  17:Generated_Source\PSoC5/I2C_1_INT.c **** #include "cyapicallbacks.h"
  18:Generated_Source\PSoC5/I2C_1_INT.c **** 
  19:Generated_Source\PSoC5/I2C_1_INT.c **** 
  20:Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
  21:Generated_Source\PSoC5/I2C_1_INT.c **** *  Place your includes, defines and code here.
  22:Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/I2C_1_INT.c **** /* `#START I2C_1_ISR_intc` */
  24:Generated_Source\PSoC5/I2C_1_INT.c **** 
  25:Generated_Source\PSoC5/I2C_1_INT.c **** /* `#END` */
  26:Generated_Source\PSoC5/I2C_1_INT.c **** 
  27:Generated_Source\PSoC5/I2C_1_INT.c **** 
  28:Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
  29:Generated_Source\PSoC5/I2C_1_INT.c **** * Function Name: I2C_1_ISR
  30:Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 2


  31:Generated_Source\PSoC5/I2C_1_INT.c **** *
  32:Generated_Source\PSoC5/I2C_1_INT.c **** * Summary:
  33:Generated_Source\PSoC5/I2C_1_INT.c **** *  The handler for the I2C interrupt. The slave and master operations are
  34:Generated_Source\PSoC5/I2C_1_INT.c **** *  handled here.
  35:Generated_Source\PSoC5/I2C_1_INT.c **** *
  36:Generated_Source\PSoC5/I2C_1_INT.c **** * Parameters:
  37:Generated_Source\PSoC5/I2C_1_INT.c **** *  None.
  38:Generated_Source\PSoC5/I2C_1_INT.c **** *
  39:Generated_Source\PSoC5/I2C_1_INT.c **** * Return:
  40:Generated_Source\PSoC5/I2C_1_INT.c **** *  None.
  41:Generated_Source\PSoC5/I2C_1_INT.c **** *
  42:Generated_Source\PSoC5/I2C_1_INT.c **** * Reentrant:
  43:Generated_Source\PSoC5/I2C_1_INT.c **** *  No.
  44:Generated_Source\PSoC5/I2C_1_INT.c **** *
  45:Generated_Source\PSoC5/I2C_1_INT.c **** *******************************************************************************/
  46:Generated_Source\PSoC5/I2C_1_INT.c **** CY_ISR(I2C_1_ISR)
  47:Generated_Source\PSoC5/I2C_1_INT.c **** {
  28              		.loc 1 47 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  48:Generated_Source\PSoC5/I2C_1_INT.c **** #if (I2C_1_MODE_SLAVE_ENABLED)
  49:Generated_Source\PSoC5/I2C_1_INT.c ****    uint8  tmp8;
  50:Generated_Source\PSoC5/I2C_1_INT.c **** #endif  /* (I2C_1_MODE_SLAVE_ENABLED) */
  51:Generated_Source\PSoC5/I2C_1_INT.c **** 
  52:Generated_Source\PSoC5/I2C_1_INT.c ****     uint8  tmpCsr;
  53:Generated_Source\PSoC5/I2C_1_INT.c ****     
  54:Generated_Source\PSoC5/I2C_1_INT.c **** #ifdef I2C_1_ISR_ENTRY_CALLBACK
  55:Generated_Source\PSoC5/I2C_1_INT.c ****     I2C_1_ISR_EntryCallback();
  56:Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* I2C_1_ISR_ENTRY_CALLBACK */
  57:Generated_Source\PSoC5/I2C_1_INT.c ****     
  58:Generated_Source\PSoC5/I2C_1_INT.c **** 
  59:Generated_Source\PSoC5/I2C_1_INT.c **** #if(I2C_1_TIMEOUT_FF_ENABLED)
  60:Generated_Source\PSoC5/I2C_1_INT.c ****     if(0u != I2C_1_TimeoutGetStatus())
  61:Generated_Source\PSoC5/I2C_1_INT.c ****     {
  62:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_TimeoutReset();
  63:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_state = I2C_1_SM_EXIT_IDLE;
  64:Generated_Source\PSoC5/I2C_1_INT.c ****         /* I2C_1_CSR_REG should be cleared after reset */
  65:Generated_Source\PSoC5/I2C_1_INT.c ****     }
  66:Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* (I2C_1_TIMEOUT_FF_ENABLED) */
  67:Generated_Source\PSoC5/I2C_1_INT.c **** 
  68:Generated_Source\PSoC5/I2C_1_INT.c **** 
  69:Generated_Source\PSoC5/I2C_1_INT.c ****     tmpCsr = I2C_1_CSR_REG;      /* Make copy as interrupts clear */
  36              		.loc 1 69 0
  37 0002 724B     		ldr	r3, .L16
  38 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  39 0006 DAB2     		uxtb	r2, r3
  40              	.LVL0:
  70:Generated_Source\PSoC5/I2C_1_INT.c **** 
  71:Generated_Source\PSoC5/I2C_1_INT.c **** #if(I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED)
  72:Generated_Source\PSoC5/I2C_1_INT.c ****     if(I2C_1_CHECK_START_GEN(I2C_1_MCSR_REG))
  73:Generated_Source\PSoC5/I2C_1_INT.c ****     {
  74:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_CLEAR_START_GEN;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 3


  75:Generated_Source\PSoC5/I2C_1_INT.c **** 
  76:Generated_Source\PSoC5/I2C_1_INT.c ****         /* Set transfer complete and error flags */
  77:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER |
  78:Generated_Source\PSoC5/I2C_1_INT.c ****                                         I2C_1_GET_MSTAT_CMPLT);
  79:Generated_Source\PSoC5/I2C_1_INT.c **** 
  80:Generated_Source\PSoC5/I2C_1_INT.c ****         /* Slave was addressed */
  81:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_state = I2C_1_SM_SLAVE;
  82:Generated_Source\PSoC5/I2C_1_INT.c ****     }
  83:Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* (I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED) */
  84:Generated_Source\PSoC5/I2C_1_INT.c **** 
  85:Generated_Source\PSoC5/I2C_1_INT.c **** 
  86:Generated_Source\PSoC5/I2C_1_INT.c **** #if(I2C_1_MODE_MULTI_MASTER_ENABLED)
  87:Generated_Source\PSoC5/I2C_1_INT.c ****     if(I2C_1_CHECK_LOST_ARB(tmpCsr))
  88:Generated_Source\PSoC5/I2C_1_INT.c ****     {
  89:Generated_Source\PSoC5/I2C_1_INT.c ****         /* Set errors */
  90:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER     |
  91:Generated_Source\PSoC5/I2C_1_INT.c ****                                         I2C_1_MSTAT_ERR_ARB_LOST |
  92:Generated_Source\PSoC5/I2C_1_INT.c ****                                         I2C_1_GET_MSTAT_CMPLT);
  93:Generated_Source\PSoC5/I2C_1_INT.c **** 
  94:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_DISABLE_INT_ON_STOP; /* Interrupt on Stop is enabled by write */
  95:Generated_Source\PSoC5/I2C_1_INT.c **** 
  96:Generated_Source\PSoC5/I2C_1_INT.c ****         #if(I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED)
  97:Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_CHECK_ADDRESS_STS(tmpCsr))
  98:Generated_Source\PSoC5/I2C_1_INT.c ****             {
  99:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Slave was addressed */
 100:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_SLAVE;
 101:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 102:Generated_Source\PSoC5/I2C_1_INT.c ****             else
 103:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 104:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_BUS_RELEASE;
 105:Generated_Source\PSoC5/I2C_1_INT.c **** 
 106:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_EXIT_IDLE;
 107:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 108:Generated_Source\PSoC5/I2C_1_INT.c ****         #else
 109:Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_BUS_RELEASE;
 110:Generated_Source\PSoC5/I2C_1_INT.c **** 
 111:Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_state = I2C_1_SM_EXIT_IDLE;
 112:Generated_Source\PSoC5/I2C_1_INT.c **** 
 113:Generated_Source\PSoC5/I2C_1_INT.c ****         #endif /* (I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED) */
 114:Generated_Source\PSoC5/I2C_1_INT.c ****     }
 115:Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* (I2C_1_MODE_MULTI_MASTER_ENABLED) */
 116:Generated_Source\PSoC5/I2C_1_INT.c **** 
 117:Generated_Source\PSoC5/I2C_1_INT.c ****     /* Check for master operation mode */
 118:Generated_Source\PSoC5/I2C_1_INT.c ****     if(I2C_1_CHECK_SM_MASTER)
  41              		.loc 1 118 0
  42 0008 714B     		ldr	r3, .L16+4
  43 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  44 000c 13F0400F 		tst	r3, #64
  45 0010 40F0DB80 		bne	.L1
 119:Generated_Source\PSoC5/I2C_1_INT.c ****     {
 120:Generated_Source\PSoC5/I2C_1_INT.c ****     #if(I2C_1_MODE_MASTER_ENABLED)
 121:Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_BYTE_COMPLETE(tmpCsr))
 122:Generated_Source\PSoC5/I2C_1_INT.c ****         {
 123:Generated_Source\PSoC5/I2C_1_INT.c ****             switch (I2C_1_state)
 124:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 125:Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_WR_ADDR:  /* After address is sent, write data */
 126:Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_RD_ADDR:  /* After address is sent, read data */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 4


 127:Generated_Source\PSoC5/I2C_1_INT.c **** 
 128:Generated_Source\PSoC5/I2C_1_INT.c ****                 tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear Stop bit history on address ph
 129:Generated_Source\PSoC5/I2C_1_INT.c **** 
 130:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_ADDR_ACK(tmpCsr))
 131:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 132:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Setup for transmit or receive of data */
 133:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_state == I2C_1_SM_MSTR_WR_ADDR)   /* TRANSMIT data */
 134:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 135:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Check if at least one byte to transfer */
 136:Generated_Source\PSoC5/I2C_1_INT.c ****                         if(I2C_1_mstrWrBufSize > 0u)
 137:Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 138:Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Load the 1st data byte */
 139:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_mstrWrBufPtr[0u];
 140:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_TRANSMIT_DATA;
 141:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrWrBufIndex = 1u;   /* Set index to 2nd element */
 142:Generated_Source\PSoC5/I2C_1_INT.c **** 
 143:Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Set transmit state until done */
 144:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state = I2C_1_SM_MSTR_WR_DATA;
 145:Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 146:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* End of buffer: complete writing */
 147:Generated_Source\PSoC5/I2C_1_INT.c ****                         else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 148:Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 149:Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Set write complete and master halted */
 150:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 151:Generated_Source\PSoC5/I2C_1_INT.c ****                                                             I2C_1_MSTAT_WR_CMPLT);
 152:Generated_Source\PSoC5/I2C_1_INT.c **** 
 153:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state = I2C_1_SM_MSTR_HALT; /* Expect ReStart */
 154:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DisableInt();
 155:Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 156:Generated_Source\PSoC5/I2C_1_INT.c ****                         else
 157:Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 158:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ENABLE_INT_ON_STOP; /* Enable interrupt on Stop, to catch it */
 159:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_GENERATE_STOP;
 160:Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 161:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 162:Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Master receive data */
 163:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 164:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_READY_TO_READ; /* Release bus to read data */
 165:Generated_Source\PSoC5/I2C_1_INT.c **** 
 166:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state  = I2C_1_SM_MSTR_RD_DATA;
 167:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 168:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 169:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Address is NACKed */
 170:Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_CHECK_ADDR_NAK(tmpCsr))
 171:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 172:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set Address NAK error */
 173:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER |
 174:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_ERR_ADDR_NAK);
 175:Generated_Source\PSoC5/I2C_1_INT.c **** 
 176:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 177:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 178:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 179:Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_GET_MSTAT_CMPLT);
 180:Generated_Source\PSoC5/I2C_1_INT.c **** 
 181:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_MSTR_HALT; /* Expect RESTART */
 182:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 183:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 5


 184:Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Do normal Stop */
 185:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 186:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP; /* Enable interrupt on Stop, to catch it */
 187:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_GENERATE_STOP;
 188:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 189:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 190:Generated_Source\PSoC5/I2C_1_INT.c ****                 else
 191:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 192:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Address phase is not set for some reason: error */
 193:Generated_Source\PSoC5/I2C_1_INT.c ****                     #if(I2C_1_TIMEOUT_ENABLED)
 194:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Exit interrupt to take chance for timeout timer to handle this case */
 195:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 196:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ClearPendingInt();
 197:Generated_Source\PSoC5/I2C_1_INT.c ****                     #else
 198:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Block execution flow: unexpected condition */
 199:Generated_Source\PSoC5/I2C_1_INT.c ****                         CYASSERT(0u != 0u);
 200:Generated_Source\PSoC5/I2C_1_INT.c ****                     #endif /* (I2C_1_TIMEOUT_ENABLED) */
 201:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 202:Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 203:Generated_Source\PSoC5/I2C_1_INT.c **** 
 204:Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_WR_DATA:
 205:Generated_Source\PSoC5/I2C_1_INT.c **** 
 206:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_DATA_ACK(tmpCsr))
 207:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 208:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Check if end of buffer */
 209:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_mstrWrBufIndex  < I2C_1_mstrWrBufSize)
 210:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 211:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG =
 212:Generated_Source\PSoC5/I2C_1_INT.c ****                                                  I2C_1_mstrWrBufPtr[I2C_1_mstrWrBufIndex];
 213:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_TRANSMIT_DATA;
 214:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrWrBufIndex++;
 215:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 216:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* End of buffer: complete writing */
 217:Generated_Source\PSoC5/I2C_1_INT.c ****                     else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 218:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 219:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Set write complete and master halted */
 220:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 221:Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_MSTAT_WR_CMPLT);
 222:Generated_Source\PSoC5/I2C_1_INT.c **** 
 223:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect restart */
 224:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 225:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 226:Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Do normal Stop */
 227:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 228:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP;    /* Enable interrupt on Stop, to catch it */
 229:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_GENERATE_STOP;
 230:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 231:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 232:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Last byte NAKed: end writing */
 233:Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 234:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 235:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set write complete, short transfer and master halted */
 236:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER       |
 237:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_ERR_SHORT_XFER |
 238:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_XFER_HALT      |
 239:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_WR_CMPLT);
 240:Generated_Source\PSoC5/I2C_1_INT.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 6


 241:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect ReStart */
 242:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_DisableInt();
 243:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 244:Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* Do normal Stop */
 245:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 246:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ENABLE_INT_ON_STOP;    /* Enable interrupt on Stop, to catch it */
 247:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_GENERATE_STOP;
 248:Generated_Source\PSoC5/I2C_1_INT.c **** 
 249:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set short transfer and error flag */
 250:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_SHORT_XFER |
 251:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_ERR_XFER);
 252:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 253:Generated_Source\PSoC5/I2C_1_INT.c **** 
 254:Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 255:Generated_Source\PSoC5/I2C_1_INT.c **** 
 256:Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_RD_DATA:
 257:Generated_Source\PSoC5/I2C_1_INT.c **** 
 258:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_mstrRdBufPtr[I2C_1_mstrRdBufIndex] = I2C_1_DATA_REG;
 259:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_mstrRdBufIndex++;
 260:Generated_Source\PSoC5/I2C_1_INT.c **** 
 261:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Check if end of buffer */
 262:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_mstrRdBufIndex < I2C_1_mstrRdBufSize)
 263:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 264:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ACK_AND_RECEIVE;       /* ACK and receive byte */
 265:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 266:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* End of buffer: complete reading */
 267:Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 268:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 269:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set read complete and master halted */
 270:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 271:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_RD_CMPLT);
 272:Generated_Source\PSoC5/I2C_1_INT.c **** 
 273:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect ReStart */
 274:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_DisableInt();
 275:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 276:Generated_Source\PSoC5/I2C_1_INT.c ****                 else
 277:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 278:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ENABLE_INT_ON_STOP;
 279:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_RECEIVE;       /* NACK and TRY to generate Stop */
 280:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 281:Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 282:Generated_Source\PSoC5/I2C_1_INT.c **** 
 283:Generated_Source\PSoC5/I2C_1_INT.c ****             default: /* This is an invalid state and should not occur */
 284:Generated_Source\PSoC5/I2C_1_INT.c **** 
 285:Generated_Source\PSoC5/I2C_1_INT.c ****             #if(I2C_1_TIMEOUT_ENABLED)
 286:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Exit interrupt to take chance for timeout timer to handles this case */
 287:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_DisableInt();
 288:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_ClearPendingInt();
 289:Generated_Source\PSoC5/I2C_1_INT.c ****             #else
 290:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Block execution flow: unexpected condition */
 291:Generated_Source\PSoC5/I2C_1_INT.c ****                 CYASSERT(0u != 0u);
 292:Generated_Source\PSoC5/I2C_1_INT.c ****             #endif /* (I2C_1_TIMEOUT_ENABLED) */
 293:Generated_Source\PSoC5/I2C_1_INT.c **** 
 294:Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 295:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 296:Generated_Source\PSoC5/I2C_1_INT.c ****         }
 297:Generated_Source\PSoC5/I2C_1_INT.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 7


 298:Generated_Source\PSoC5/I2C_1_INT.c ****         /* Catches Stop: end of transaction */
 299:Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_STOP_STS(tmpCsr))
 300:Generated_Source\PSoC5/I2C_1_INT.c ****         {
 301:Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_mstrStatus |= I2C_1_GET_MSTAT_CMPLT;
 302:Generated_Source\PSoC5/I2C_1_INT.c **** 
 303:Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_DISABLE_INT_ON_STOP;
 304:Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_state = I2C_1_SM_IDLE;
 305:Generated_Source\PSoC5/I2C_1_INT.c ****         }
 306:Generated_Source\PSoC5/I2C_1_INT.c ****     #endif /* (I2C_1_MODE_MASTER_ENABLED) */
 307:Generated_Source\PSoC5/I2C_1_INT.c ****     }
 308:Generated_Source\PSoC5/I2C_1_INT.c ****     else if(I2C_1_CHECK_SM_SLAVE)
  46              		.loc 1 308 0
  47 0014 6E4B     		ldr	r3, .L16+4
  48 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  49 0018 13F0100F 		tst	r3, #16
  50 001c 00F0D280 		beq	.L3
 309:Generated_Source\PSoC5/I2C_1_INT.c ****     {
 310:Generated_Source\PSoC5/I2C_1_INT.c ****     #if(I2C_1_MODE_SLAVE_ENABLED)
 311:Generated_Source\PSoC5/I2C_1_INT.c **** 
 312:Generated_Source\PSoC5/I2C_1_INT.c ****         if((I2C_1_CHECK_STOP_STS(tmpCsr)) || /* Stop || Restart */
  51              		.loc 1 312 0
  52 0020 12F0200F 		tst	r2, #32
  53 0024 03D1     		bne	.L4
  54              		.loc 1 312 0 is_stmt 0 discriminator 1
  55 0026 02F00903 		and	r3, r2, #9
  56 002a 092B     		cmp	r3, #9
  57 002c 15D1     		bne	.L5
  58              	.L4:
 313:Generated_Source\PSoC5/I2C_1_INT.c ****            (I2C_1_CHECK_BYTE_COMPLETE(tmpCsr) && I2C_1_CHECK_ADDRESS_STS(tmpCsr)))
 314:Generated_Source\PSoC5/I2C_1_INT.c ****         {
 315:Generated_Source\PSoC5/I2C_1_INT.c ****             /* Catch end of master write transaction: use interrupt on Stop */
 316:Generated_Source\PSoC5/I2C_1_INT.c ****             /* The Stop bit history on address phase does not have correct state */
 317:Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_SM_SL_WR_DATA == I2C_1_state)
  59              		.loc 1 317 0 is_stmt 1
  60 002e 684B     		ldr	r3, .L16+4
  61 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 0032 DBB2     		uxtb	r3, r3
  63 0034 112B     		cmp	r3, #17
  64 0036 10D1     		bne	.L5
 318:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 319:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_DISABLE_INT_ON_STOP;
  65              		.loc 1 319 0
  66 0038 6649     		ldr	r1, .L16+8
  67 003a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  68 003c 03F0EF03 		and	r3, r3, #239
  69 0040 0B70     		strb	r3, [r1]
 320:Generated_Source\PSoC5/I2C_1_INT.c **** 
 321:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_slStatus &= ((uint8) ~I2C_1_SSTAT_WR_BUSY);
  70              		.loc 1 321 0
  71 0042 654B     		ldr	r3, .L16+12
  72 0044 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  73 0046 01F0DF01 		and	r1, r1, #223
  74 004a 1970     		strb	r1, [r3]
 322:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_slStatus |= ((uint8)  I2C_1_SSTAT_WR_CMPLT);
  75              		.loc 1 322 0
  76 004c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  77 004e 41F01001 		orr	r1, r1, #16
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 8


  78 0052 1970     		strb	r1, [r3]
 323:Generated_Source\PSoC5/I2C_1_INT.c **** 
 324:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_IDLE;
  79              		.loc 1 324 0
  80 0054 1021     		movs	r1, #16
  81 0056 5E4B     		ldr	r3, .L16+4
  82 0058 1970     		strb	r1, [r3]
  83              	.L5:
 325:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 326:Generated_Source\PSoC5/I2C_1_INT.c ****         }
 327:Generated_Source\PSoC5/I2C_1_INT.c **** 
 328:Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_BYTE_COMPLETE(tmpCsr))
  84              		.loc 1 328 0
  85 005a 12F0010F 		tst	r2, #1
  86 005e 00F0B480 		beq	.L1
 329:Generated_Source\PSoC5/I2C_1_INT.c ****         {
 330:Generated_Source\PSoC5/I2C_1_INT.c ****             /* The address only issued after Start or ReStart: so check the address
 331:Generated_Source\PSoC5/I2C_1_INT.c ****                to catch these events:
 332:Generated_Source\PSoC5/I2C_1_INT.c ****                 FF : sets an address phase with a byte_complete interrupt trigger.
 333:Generated_Source\PSoC5/I2C_1_INT.c ****                 UDB: sets an address phase immediately after Start or ReStart. */
 334:Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_CHECK_ADDRESS_STS(tmpCsr))
  87              		.loc 1 334 0
  88 0062 12F0080F 		tst	r2, #8
  89 0066 42D0     		beq	.L6
 335:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 336:Generated_Source\PSoC5/I2C_1_INT.c ****             /* Check for software address detection */
 337:Generated_Source\PSoC5/I2C_1_INT.c ****             #if(I2C_1_SW_ADRR_DECODE)
 338:Generated_Source\PSoC5/I2C_1_INT.c ****                 tmp8 = I2C_1_GET_SLAVE_ADDR(I2C_1_DATA_REG);
 339:Generated_Source\PSoC5/I2C_1_INT.c **** 
 340:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(tmp8 == I2C_1_slAddress)   /* Check for address match */
 341:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 342:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(0u != (I2C_1_DATA_REG & I2C_1_READ_FLAG))
 343:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 344:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Place code to prepare read buffer here                  */
 345:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* `#START I2C_1_SW_PREPARE_READ_BUF_interrupt` */
 346:Generated_Source\PSoC5/I2C_1_INT.c **** 
 347:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* `#END` */
 348:Generated_Source\PSoC5/I2C_1_INT.c **** 
 349:Generated_Source\PSoC5/I2C_1_INT.c ****                     #ifdef I2C_1_SW_PREPARE_READ_BUF_CALLBACK
 350:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_SwPrepareReadBuf_Callback();
 351:Generated_Source\PSoC5/I2C_1_INT.c ****                     #endif /* I2C_1_SW_PREPARE_READ_BUF_CALLBACK */
 352:Generated_Source\PSoC5/I2C_1_INT.c ****                         
 353:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Prepare next operation to read, get data and place in data register */
 354:Generated_Source\PSoC5/I2C_1_INT.c ****                         if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
 355:Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 356:Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Load first data byte from array */
 357:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 358:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ACK_AND_TRANSMIT;
 359:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slRdBufIndex++;
 360:Generated_Source\PSoC5/I2C_1_INT.c **** 
 361:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slStatus |= I2C_1_SSTAT_RD_BUSY;
 362:Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 363:Generated_Source\PSoC5/I2C_1_INT.c ****                         else    /* Overflow: provide 0xFF on bus */
 364:Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 365:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 366:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ACK_AND_TRANSMIT;
 367:Generated_Source\PSoC5/I2C_1_INT.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 9


 368:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slStatus  |= (I2C_1_SSTAT_RD_BUSY |
 369:Generated_Source\PSoC5/I2C_1_INT.c ****                                                            I2C_1_SSTAT_RD_ERR_OVFL);
 370:Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 371:Generated_Source\PSoC5/I2C_1_INT.c **** 
 372:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_SL_RD_DATA;
 373:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 374:Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Write transaction: receive 1st byte */
 375:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 376:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_RECEIVE;
 377:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_SL_WR_DATA;
 378:Generated_Source\PSoC5/I2C_1_INT.c **** 
 379:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= I2C_1_SSTAT_WR_BUSY;
 380:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP;
 381:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 382:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 383:Generated_Source\PSoC5/I2C_1_INT.c ****                 else
 384:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 385:Generated_Source\PSoC5/I2C_1_INT.c ****                     /*     Place code to compare for additional address here    */
 386:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#START I2C_1_SW_ADDR_COMPARE_interruptStart` */
 387:Generated_Source\PSoC5/I2C_1_INT.c **** 
 388:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#END` */
 389:Generated_Source\PSoC5/I2C_1_INT.c **** 
 390:Generated_Source\PSoC5/I2C_1_INT.c ****                 #ifdef I2C_1_SW_ADDR_COMPARE_ENTRY_CALLBACK
 391:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_SwAddrCompare_EntryCallback();
 392:Generated_Source\PSoC5/I2C_1_INT.c ****                 #endif /* I2C_1_SW_ADDR_COMPARE_ENTRY_CALLBACK */
 393:Generated_Source\PSoC5/I2C_1_INT.c ****                     
 394:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_RECEIVE;   /* NACK address */
 395:Generated_Source\PSoC5/I2C_1_INT.c **** 
 396:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Place code to end of condition for NACK generation here */
 397:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#START I2C_1_SW_ADDR_COMPARE_interruptEnd`  */
 398:Generated_Source\PSoC5/I2C_1_INT.c **** 
 399:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#END` */
 400:Generated_Source\PSoC5/I2C_1_INT.c **** 
 401:Generated_Source\PSoC5/I2C_1_INT.c ****                 #ifdef I2C_1_SW_ADDR_COMPARE_EXIT_CALLBACK
 402:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_SwAddrCompare_ExitCallback();
 403:Generated_Source\PSoC5/I2C_1_INT.c ****                 #endif /* I2C_1_SW_ADDR_COMPARE_EXIT_CALLBACK */
 404:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 405:Generated_Source\PSoC5/I2C_1_INT.c **** 
 406:Generated_Source\PSoC5/I2C_1_INT.c ****             #else /* (I2C_1_HW_ADRR_DECODE) */
 407:Generated_Source\PSoC5/I2C_1_INT.c **** 
 408:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(0u != (I2C_1_DATA_REG & I2C_1_READ_FLAG))
  90              		.loc 1 408 0
  91 0068 5C4B     		ldr	r3, .L16+16
  92 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93 006c 13F0010F 		tst	r3, #1
  94 0070 2CD0     		beq	.L7
 409:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 410:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Place code to prepare read buffer here                  */
 411:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#START I2C_1_HW_PREPARE_READ_BUF_interrupt` */
 412:Generated_Source\PSoC5/I2C_1_INT.c **** 
 413:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#END` */
 414:Generated_Source\PSoC5/I2C_1_INT.c ****                     
 415:Generated_Source\PSoC5/I2C_1_INT.c ****                 #ifdef I2C_1_HW_PREPARE_READ_BUF_CALLBACK
 416:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_HwPrepareReadBuf_Callback();
 417:Generated_Source\PSoC5/I2C_1_INT.c ****                 #endif /* I2C_1_HW_PREPARE_READ_BUF_CALLBACK */
 418:Generated_Source\PSoC5/I2C_1_INT.c **** 
 419:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Prepare next operation to read, get data and place in data register */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 10


 420:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
  95              		.loc 1 420 0
  96 0072 5B4B     		ldr	r3, .L16+20
  97 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98              	.LVL1:
  99 0076 D2B2     		uxtb	r2, r2
 100 0078 5A4B     		ldr	r3, .L16+24
 101 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 102 007c DBB2     		uxtb	r3, r3
 103 007e 9A42     		cmp	r2, r3
 104 0080 15D2     		bcs	.L8
 421:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 422:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Load first data byte from array */
 423:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 105              		.loc 1 423 0
 106 0082 574A     		ldr	r2, .L16+20
 107 0084 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 108 0086 DBB2     		uxtb	r3, r3
 109 0088 5749     		ldr	r1, .L16+28
 110 008a 0968     		ldr	r1, [r1]
 111 008c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 112 008e DBB2     		uxtb	r3, r3
 113 0090 5249     		ldr	r1, .L16+16
 114 0092 0B70     		strb	r3, [r1]
 424:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_TRANSMIT;
 115              		.loc 1 424 0
 116 0094 1421     		movs	r1, #20
 117 0096 4D4B     		ldr	r3, .L16
 118 0098 1970     		strb	r1, [r3]
 425:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slRdBufIndex++;
 119              		.loc 1 425 0
 120 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 121 009c 0133     		adds	r3, r3, #1
 122 009e DBB2     		uxtb	r3, r3
 123 00a0 1370     		strb	r3, [r2]
 426:Generated_Source\PSoC5/I2C_1_INT.c **** 
 427:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= I2C_1_SSTAT_RD_BUSY;
 124              		.loc 1 427 0
 125 00a2 4D4A     		ldr	r2, .L16+12
 126 00a4 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 127 00a6 43F00203 		orr	r3, r3, #2
 128 00aa 1370     		strb	r3, [r2]
 129 00ac 0AE0     		b	.L9
 130              	.L8:
 428:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 429:Generated_Source\PSoC5/I2C_1_INT.c ****                     else    /* Overflow: provide 0xFF on bus */
 430:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 431:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 131              		.loc 1 431 0
 132 00ae FF22     		movs	r2, #255
 133 00b0 4A4B     		ldr	r3, .L16+16
 134 00b2 1A70     		strb	r2, [r3]
 432:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_TRANSMIT;
 135              		.loc 1 432 0
 136 00b4 1422     		movs	r2, #20
 137 00b6 013B     		subs	r3, r3, #1
 138 00b8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 11


 433:Generated_Source\PSoC5/I2C_1_INT.c **** 
 434:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus  |= (I2C_1_SSTAT_RD_BUSY |
 139              		.loc 1 434 0
 140 00ba 474A     		ldr	r2, .L16+12
 141 00bc 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 142 00be 43F00603 		orr	r3, r3, #6
 143 00c2 1370     		strb	r3, [r2]
 144              	.L9:
 435:Generated_Source\PSoC5/I2C_1_INT.c ****                                                        I2C_1_SSTAT_RD_ERR_OVFL);
 436:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 437:Generated_Source\PSoC5/I2C_1_INT.c **** 
 438:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_SL_RD_DATA;
 145              		.loc 1 438 0
 146 00c4 1222     		movs	r2, #18
 147 00c6 424B     		ldr	r3, .L16+4
 148 00c8 1A70     		strb	r2, [r3]
 149 00ca 08BD     		pop	{r3, pc}
 150              	.LVL2:
 151              	.L7:
 439:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 440:Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* Write transaction: receive 1st byte */
 441:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 442:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ACK_AND_RECEIVE;
 152              		.loc 1 442 0
 153 00cc 1022     		movs	r2, #16
 154              	.LVL3:
 155 00ce 3F4B     		ldr	r3, .L16
 156 00d0 1A70     		strb	r2, [r3]
 443:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_SL_WR_DATA;
 157              		.loc 1 443 0
 158 00d2 1122     		movs	r2, #17
 159 00d4 3E4B     		ldr	r3, .L16+4
 160 00d6 1A70     		strb	r2, [r3]
 444:Generated_Source\PSoC5/I2C_1_INT.c **** 
 445:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus |= I2C_1_SSTAT_WR_BUSY;
 161              		.loc 1 445 0
 162 00d8 3F4A     		ldr	r2, .L16+12
 163 00da 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 164 00dc 43F02003 		orr	r3, r3, #32
 165 00e0 1370     		strb	r3, [r2]
 446:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ENABLE_INT_ON_STOP;
 166              		.loc 1 446 0
 167 00e2 3C4A     		ldr	r2, .L16+8
 168 00e4 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 169 00e6 43F01003 		orr	r3, r3, #16
 170 00ea 1370     		strb	r3, [r2]
 171 00ec 08BD     		pop	{r3, pc}
 172              	.LVL4:
 173              	.L6:
 447:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 448:Generated_Source\PSoC5/I2C_1_INT.c **** 
 449:Generated_Source\PSoC5/I2C_1_INT.c ****             #endif /* (I2C_1_SW_ADRR_DECODE) */
 450:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 451:Generated_Source\PSoC5/I2C_1_INT.c ****             /* Data states */
 452:Generated_Source\PSoC5/I2C_1_INT.c ****             /* Data master writes into slave */
 453:Generated_Source\PSoC5/I2C_1_INT.c ****             else if(I2C_1_state == I2C_1_SM_SL_WR_DATA)
 174              		.loc 1 453 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 12


 175 00ee 384B     		ldr	r3, .L16+4
 176 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 177 00f2 DBB2     		uxtb	r3, r3
 178 00f4 112B     		cmp	r3, #17
 179 00f6 21D1     		bne	.L10
 454:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 455:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_slWrBufIndex < I2C_1_slWrBufSize)
 180              		.loc 1 455 0
 181 00f8 3C4B     		ldr	r3, .L16+32
 182 00fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 183              	.LVL5:
 184 00fc D2B2     		uxtb	r2, r2
 185 00fe 3C4B     		ldr	r3, .L16+36
 186 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 187 0102 DBB2     		uxtb	r3, r3
 188 0104 9A42     		cmp	r2, r3
 189 0106 10D2     		bcs	.L11
 456:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 457:Generated_Source\PSoC5/I2C_1_INT.c ****                     tmp8 = I2C_1_DATA_REG;
 190              		.loc 1 457 0
 191 0108 344B     		ldr	r3, .L16+16
 192 010a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 193 010c C9B2     		uxtb	r1, r1
 194              	.LVL6:
 458:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ACK_AND_RECEIVE;
 195              		.loc 1 458 0
 196 010e 1022     		movs	r2, #16
 197 0110 013B     		subs	r3, r3, #1
 198 0112 1A70     		strb	r2, [r3]
 459:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slWrBufPtr[I2C_1_slWrBufIndex] = tmp8;
 199              		.loc 1 459 0
 200 0114 354A     		ldr	r2, .L16+32
 201 0116 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 202 0118 DBB2     		uxtb	r3, r3
 203 011a 3648     		ldr	r0, .L16+40
 204 011c 0068     		ldr	r0, [r0]
 205 011e C154     		strb	r1, [r0, r3]
 460:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slWrBufIndex++;
 206              		.loc 1 460 0
 207 0120 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 208 0122 0133     		adds	r3, r3, #1
 209 0124 DBB2     		uxtb	r3, r3
 210 0126 1370     		strb	r3, [r2]
 211 0128 08BD     		pop	{r3, pc}
 212              	.LVL7:
 213              	.L11:
 461:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 462:Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* of array: complete write, send NACK */
 463:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 464:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_RECEIVE;
 214              		.loc 1 464 0
 215 012a 0022     		movs	r2, #0
 216 012c 274B     		ldr	r3, .L16
 217 012e 1A70     		strb	r2, [r3]
 465:Generated_Source\PSoC5/I2C_1_INT.c **** 
 466:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus |= I2C_1_SSTAT_WR_ERR_OVFL;
 218              		.loc 1 466 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 13


 219 0130 294A     		ldr	r2, .L16+12
 220 0132 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 221 0134 43F04003 		orr	r3, r3, #64
 222 0138 1370     		strb	r3, [r2]
 223 013a 08BD     		pop	{r3, pc}
 224              	.LVL8:
 225              	.L10:
 467:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 468:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 469:Generated_Source\PSoC5/I2C_1_INT.c ****             /* Data master reads from slave */
 470:Generated_Source\PSoC5/I2C_1_INT.c ****             else if(I2C_1_state == I2C_1_SM_SL_RD_DATA)
 226              		.loc 1 470 0
 227 013c 244B     		ldr	r3, .L16+4
 228 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 229 0140 DBB2     		uxtb	r3, r3
 230 0142 122B     		cmp	r3, #18
 231 0144 3AD1     		bne	.L12
 471:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 472:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_DATA_ACK(tmpCsr))
 232              		.loc 1 472 0
 233 0146 12F0020F 		tst	r2, #2
 234 014a 24D1     		bne	.L13
 473:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 474:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
 235              		.loc 1 474 0
 236 014c 244B     		ldr	r3, .L16+20
 237 014e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 238              	.LVL9:
 239 0150 D2B2     		uxtb	r2, r2
 240 0152 244B     		ldr	r3, .L16+24
 241 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 242 0156 DBB2     		uxtb	r3, r3
 243 0158 9A42     		cmp	r2, r3
 244 015a 10D2     		bcs	.L14
 475:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 476:Generated_Source\PSoC5/I2C_1_INT.c ****                          /* Get data from array */
 477:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 245              		.loc 1 477 0
 246 015c 204A     		ldr	r2, .L16+20
 247 015e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 248 0160 DBB2     		uxtb	r3, r3
 249 0162 2149     		ldr	r1, .L16+28
 250 0164 0968     		ldr	r1, [r1]
 251 0166 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 252 0168 DBB2     		uxtb	r3, r3
 253 016a 1C49     		ldr	r1, .L16+16
 254 016c 0B70     		strb	r3, [r1]
 478:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_TRANSMIT_DATA;
 255              		.loc 1 478 0
 256 016e 0421     		movs	r1, #4
 257 0170 164B     		ldr	r3, .L16
 258 0172 1970     		strb	r1, [r3]
 479:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slRdBufIndex++;
 259              		.loc 1 479 0
 260 0174 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 261 0176 0133     		adds	r3, r3, #1
 262 0178 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 14


 263 017a 1370     		strb	r3, [r2]
 264 017c 08BD     		pop	{r3, pc}
 265              	.L14:
 480:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 481:Generated_Source\PSoC5/I2C_1_INT.c ****                     else   /* Overflow: provide 0xFF on bus */
 482:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 483:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 266              		.loc 1 483 0
 267 017e FF22     		movs	r2, #255
 268 0180 164B     		ldr	r3, .L16+16
 269 0182 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_TRANSMIT_DATA;
 270              		.loc 1 484 0
 271 0184 0422     		movs	r2, #4
 272 0186 013B     		subs	r3, r3, #1
 273 0188 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC5/I2C_1_INT.c **** 
 486:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= I2C_1_SSTAT_RD_ERR_OVFL;
 274              		.loc 1 486 0
 275 018a 134A     		ldr	r2, .L16+12
 276 018c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 277 018e 43F00403 		orr	r3, r3, #4
 278 0192 1370     		strb	r3, [r2]
 279 0194 08BD     		pop	{r3, pc}
 280              	.LVL10:
 281              	.L13:
 487:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 488:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 489:Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* Last byte was NACKed: read complete */
 490:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 491:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Only NACK appears on bus */
 492:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 282              		.loc 1 492 0
 283 0196 FF22     		movs	r2, #255
 284              	.LVL11:
 285 0198 104B     		ldr	r3, .L16+16
 286 019a 1A70     		strb	r2, [r3]
 493:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_TRANSMIT;
 287              		.loc 1 493 0
 288 019c 0022     		movs	r2, #0
 289 019e 013B     		subs	r3, r3, #1
 290 01a0 1A70     		strb	r2, [r3]
 494:Generated_Source\PSoC5/I2C_1_INT.c **** 
 495:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus &= ((uint8) ~I2C_1_SSTAT_RD_BUSY);
 291              		.loc 1 495 0
 292 01a2 0D4B     		ldr	r3, .L16+12
 293 01a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 294 01a6 02F0FD02 		and	r2, r2, #253
 295 01aa 1A70     		strb	r2, [r3]
 496:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus |= ((uint8)  I2C_1_SSTAT_RD_CMPLT);
 296              		.loc 1 496 0
 297 01ac 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 298 01ae 42F00102 		orr	r2, r2, #1
 299 01b2 1A70     		strb	r2, [r3]
 497:Generated_Source\PSoC5/I2C_1_INT.c **** 
 498:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_IDLE;
 300              		.loc 1 498 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 15


 301 01b4 1022     		movs	r2, #16
 302 01b6 064B     		ldr	r3, .L16+4
 303 01b8 1A70     		strb	r2, [r3]
 304 01ba 08BD     		pop	{r3, pc}
 305              	.LVL12:
 306              	.L12:
 499:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 500:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 501:Generated_Source\PSoC5/I2C_1_INT.c ****             else
 502:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 503:Generated_Source\PSoC5/I2C_1_INT.c ****             #if(I2C_1_TIMEOUT_ENABLED)
 504:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Exit interrupt to take chance for timeout timer to handle this case */
 505:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_DisableInt();
 506:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_ClearPendingInt();
 507:Generated_Source\PSoC5/I2C_1_INT.c ****             #else
 508:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Block execution flow: unexpected condition */
 509:Generated_Source\PSoC5/I2C_1_INT.c ****                 CYASSERT(0u != 0u);
 307              		.loc 1 509 0 discriminator 1
 308 01bc 0020     		movs	r0, #0
 309 01be FFF7FEFF 		bl	CyHalt
 310              	.LVL13:
 311 01c2 08BD     		pop	{r3, pc}
 312              	.LVL14:
 313              	.L3:
 510:Generated_Source\PSoC5/I2C_1_INT.c ****             #endif /* (I2C_1_TIMEOUT_ENABLED) */
 511:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 512:Generated_Source\PSoC5/I2C_1_INT.c ****         }
 513:Generated_Source\PSoC5/I2C_1_INT.c ****     #endif /* (I2C_1_MODE_SLAVE_ENABLED) */
 514:Generated_Source\PSoC5/I2C_1_INT.c ****     }
 515:Generated_Source\PSoC5/I2C_1_INT.c ****     else
 516:Generated_Source\PSoC5/I2C_1_INT.c ****     {
 517:Generated_Source\PSoC5/I2C_1_INT.c ****         /* The FSM skips master and slave processing: return to IDLE */
 518:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_state = I2C_1_SM_IDLE;
 314              		.loc 1 518 0
 315 01c4 1022     		movs	r2, #16
 316              	.LVL15:
 317 01c6 024B     		ldr	r3, .L16+4
 318 01c8 1A70     		strb	r2, [r3]
 319              	.L1:
 320 01ca 08BD     		pop	{r3, pc}
 321              	.L17:
 322              		.align	2
 323              	.L16:
 324 01cc D7490040 		.word	1073760727
 325 01d0 00000000 		.word	I2C_1_state
 326 01d4 D6490040 		.word	1073760726
 327 01d8 00000000 		.word	I2C_1_slStatus
 328 01dc D8490040 		.word	1073760728
 329 01e0 00000000 		.word	I2C_1_slRdBufIndex
 330 01e4 00000000 		.word	I2C_1_slRdBufSize
 331 01e8 00000000 		.word	I2C_1_slRdBufPtr
 332 01ec 00000000 		.word	I2C_1_slWrBufIndex
 333 01f0 00000000 		.word	I2C_1_slWrBufSize
 334 01f4 00000000 		.word	I2C_1_slWrBufPtr
 335              		.cfi_endproc
 336              	.LFE0:
 337              		.size	I2C_1_ISR, .-I2C_1_ISR
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 16


 338              		.text
 339              	.Letext0:
 340              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 341              		.file 3 "Generated_Source\\PSoC5\\I2C_1_PVT.h"
 342              		.file 4 "Generated_Source\\PSoC5\\CyLib.h"
 343              		.section	.debug_info,"",%progbits
 344              	.Ldebug_info0:
 345 0000 53010000 		.4byte	0x153
 346 0004 0400     		.2byte	0x4
 347 0006 00000000 		.4byte	.Ldebug_abbrev0
 348 000a 04       		.byte	0x4
 349 000b 01       		.uleb128 0x1
 350 000c 6E000000 		.4byte	.LASF26
 351 0010 0C       		.byte	0xc
 352 0011 0D020000 		.4byte	.LASF27
 353 0015 97010000 		.4byte	.LASF28
 354 0019 00000000 		.4byte	.Ldebug_ranges0+0
 355 001d 00000000 		.4byte	0
 356 0021 00000000 		.4byte	.Ldebug_line0
 357 0025 02       		.uleb128 0x2
 358 0026 01       		.byte	0x1
 359 0027 06       		.byte	0x6
 360 0028 4F020000 		.4byte	.LASF0
 361 002c 02       		.uleb128 0x2
 362 002d 01       		.byte	0x1
 363 002e 08       		.byte	0x8
 364 002f 60000000 		.4byte	.LASF1
 365 0033 02       		.uleb128 0x2
 366 0034 02       		.byte	0x2
 367 0035 05       		.byte	0x5
 368 0036 03020000 		.4byte	.LASF2
 369 003a 02       		.uleb128 0x2
 370 003b 02       		.byte	0x2
 371 003c 07       		.byte	0x7
 372 003d 31000000 		.4byte	.LASF3
 373 0041 02       		.uleb128 0x2
 374 0042 04       		.byte	0x4
 375 0043 05       		.byte	0x5
 376 0044 28000000 		.4byte	.LASF4
 377 0048 02       		.uleb128 0x2
 378 0049 04       		.byte	0x4
 379 004a 07       		.byte	0x7
 380 004b 01010000 		.4byte	.LASF5
 381 004f 02       		.uleb128 0x2
 382 0050 08       		.byte	0x8
 383 0051 05       		.byte	0x5
 384 0052 F0010000 		.4byte	.LASF6
 385 0056 02       		.uleb128 0x2
 386 0057 08       		.byte	0x8
 387 0058 07       		.byte	0x7
 388 0059 79010000 		.4byte	.LASF7
 389 005d 03       		.uleb128 0x3
 390 005e 04       		.byte	0x4
 391 005f 05       		.byte	0x5
 392 0060 696E7400 		.ascii	"int\000"
 393 0064 02       		.uleb128 0x2
 394 0065 04       		.byte	0x4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 17


 395 0066 07       		.byte	0x7
 396 0067 6C010000 		.4byte	.LASF8
 397 006b 04       		.uleb128 0x4
 398 006c 13010000 		.4byte	.LASF12
 399 0070 02       		.byte	0x2
 400 0071 C2       		.byte	0xc2
 401 0072 2C000000 		.4byte	0x2c
 402 0076 02       		.uleb128 0x2
 403 0077 04       		.byte	0x4
 404 0078 04       		.byte	0x4
 405 0079 55000000 		.4byte	.LASF9
 406 007d 02       		.uleb128 0x2
 407 007e 08       		.byte	0x8
 408 007f 04       		.byte	0x4
 409 0080 2B010000 		.4byte	.LASF10
 410 0084 02       		.uleb128 0x2
 411 0085 01       		.byte	0x1
 412 0086 08       		.byte	0x8
 413 0087 FE010000 		.4byte	.LASF11
 414 008b 05       		.uleb128 0x5
 415 008c FC000000 		.4byte	.LASF13
 416 0090 02       		.byte	0x2
 417 0091 6C01     		.2byte	0x16c
 418 0093 97000000 		.4byte	0x97
 419 0097 06       		.uleb128 0x6
 420 0098 6B000000 		.4byte	0x6b
 421 009c 02       		.uleb128 0x2
 422 009d 08       		.byte	0x8
 423 009e 04       		.byte	0x4
 424 009f 43020000 		.4byte	.LASF14
 425 00a3 02       		.uleb128 0x2
 426 00a4 04       		.byte	0x4
 427 00a5 07       		.byte	0x7
 428 00a6 E7010000 		.4byte	.LASF15
 429 00aa 07       		.uleb128 0x7
 430 00ab 43010000 		.4byte	.LASF29
 431 00af 01       		.byte	0x1
 432 00b0 2E       		.byte	0x2e
 433 00b1 00000000 		.4byte	.LFB0
 434 00b5 F8010000 		.4byte	.LFE0-.LFB0
 435 00b9 01       		.uleb128 0x1
 436 00ba 9C       		.byte	0x9c
 437 00bb ED000000 		.4byte	0xed
 438 00bf 08       		.uleb128 0x8
 439 00c0 5B000000 		.4byte	.LASF16
 440 00c4 01       		.byte	0x1
 441 00c5 31       		.byte	0x31
 442 00c6 6B000000 		.4byte	0x6b
 443 00ca 00000000 		.4byte	.LLST0
 444 00ce 08       		.uleb128 0x8
 445 00cf 00000000 		.4byte	.LASF17
 446 00d3 01       		.byte	0x1
 447 00d4 34       		.byte	0x34
 448 00d5 6B000000 		.4byte	0x6b
 449 00d9 13000000 		.4byte	.LLST1
 450 00dd 09       		.uleb128 0x9
 451 00de C2010000 		.4byte	.LVL13
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 18


 452 00e2 4B010000 		.4byte	0x14b
 453 00e6 0A       		.uleb128 0xa
 454 00e7 01       		.uleb128 0x1
 455 00e8 50       		.byte	0x50
 456 00e9 01       		.uleb128 0x1
 457 00ea 30       		.byte	0x30
 458 00eb 00       		.byte	0
 459 00ec 00       		.byte	0
 460 00ed 0B       		.uleb128 0xb
 461 00ee 60010000 		.4byte	.LASF18
 462 00f2 03       		.byte	0x3
 463 00f3 23       		.byte	0x23
 464 00f4 97000000 		.4byte	0x97
 465 00f8 0B       		.uleb128 0xb
 466 00f9 19000000 		.4byte	.LASF19
 467 00fd 03       		.byte	0x3
 468 00fe 38       		.byte	0x38
 469 00ff 97000000 		.4byte	0x97
 470 0103 0B       		.uleb128 0xb
 471 0104 44000000 		.4byte	.LASF20
 472 0108 03       		.byte	0x3
 473 0109 3B       		.byte	0x3b
 474 010a 0E010000 		.4byte	0x10e
 475 010e 0C       		.uleb128 0xc
 476 010f 04       		.byte	0x4
 477 0110 97000000 		.4byte	0x97
 478 0114 0B       		.uleb128 0xb
 479 0115 07000000 		.4byte	.LASF21
 480 0119 03       		.byte	0x3
 481 011a 3C       		.byte	0x3c
 482 011b 97000000 		.4byte	0x97
 483 011f 0B       		.uleb128 0xb
 484 0120 30020000 		.4byte	.LASF22
 485 0124 03       		.byte	0x3
 486 0125 3D       		.byte	0x3d
 487 0126 97000000 		.4byte	0x97
 488 012a 0B       		.uleb128 0xb
 489 012b 32010000 		.4byte	.LASF23
 490 012f 03       		.byte	0x3
 491 0130 40       		.byte	0x40
 492 0131 0E010000 		.4byte	0x10e
 493 0135 0B       		.uleb128 0xb
 494 0136 19010000 		.4byte	.LASF24
 495 013a 03       		.byte	0x3
 496 013b 41       		.byte	0x41
 497 013c 97000000 		.4byte	0x97
 498 0140 0B       		.uleb128 0xb
 499 0141 4D010000 		.4byte	.LASF25
 500 0145 03       		.byte	0x3
 501 0146 42       		.byte	0x42
 502 0147 97000000 		.4byte	0x97
 503 014b 0D       		.uleb128 0xd
 504 014c 90010000 		.4byte	.LASF30
 505 0150 90010000 		.4byte	.LASF30
 506 0154 04       		.byte	0x4
 507 0155 80       		.byte	0x80
 508 0156 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 19


 509              		.section	.debug_abbrev,"",%progbits
 510              	.Ldebug_abbrev0:
 511 0000 01       		.uleb128 0x1
 512 0001 11       		.uleb128 0x11
 513 0002 01       		.byte	0x1
 514 0003 25       		.uleb128 0x25
 515 0004 0E       		.uleb128 0xe
 516 0005 13       		.uleb128 0x13
 517 0006 0B       		.uleb128 0xb
 518 0007 03       		.uleb128 0x3
 519 0008 0E       		.uleb128 0xe
 520 0009 1B       		.uleb128 0x1b
 521 000a 0E       		.uleb128 0xe
 522 000b 55       		.uleb128 0x55
 523 000c 17       		.uleb128 0x17
 524 000d 11       		.uleb128 0x11
 525 000e 01       		.uleb128 0x1
 526 000f 10       		.uleb128 0x10
 527 0010 17       		.uleb128 0x17
 528 0011 00       		.byte	0
 529 0012 00       		.byte	0
 530 0013 02       		.uleb128 0x2
 531 0014 24       		.uleb128 0x24
 532 0015 00       		.byte	0
 533 0016 0B       		.uleb128 0xb
 534 0017 0B       		.uleb128 0xb
 535 0018 3E       		.uleb128 0x3e
 536 0019 0B       		.uleb128 0xb
 537 001a 03       		.uleb128 0x3
 538 001b 0E       		.uleb128 0xe
 539 001c 00       		.byte	0
 540 001d 00       		.byte	0
 541 001e 03       		.uleb128 0x3
 542 001f 24       		.uleb128 0x24
 543 0020 00       		.byte	0
 544 0021 0B       		.uleb128 0xb
 545 0022 0B       		.uleb128 0xb
 546 0023 3E       		.uleb128 0x3e
 547 0024 0B       		.uleb128 0xb
 548 0025 03       		.uleb128 0x3
 549 0026 08       		.uleb128 0x8
 550 0027 00       		.byte	0
 551 0028 00       		.byte	0
 552 0029 04       		.uleb128 0x4
 553 002a 16       		.uleb128 0x16
 554 002b 00       		.byte	0
 555 002c 03       		.uleb128 0x3
 556 002d 0E       		.uleb128 0xe
 557 002e 3A       		.uleb128 0x3a
 558 002f 0B       		.uleb128 0xb
 559 0030 3B       		.uleb128 0x3b
 560 0031 0B       		.uleb128 0xb
 561 0032 49       		.uleb128 0x49
 562 0033 13       		.uleb128 0x13
 563 0034 00       		.byte	0
 564 0035 00       		.byte	0
 565 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 20


 566 0037 16       		.uleb128 0x16
 567 0038 00       		.byte	0
 568 0039 03       		.uleb128 0x3
 569 003a 0E       		.uleb128 0xe
 570 003b 3A       		.uleb128 0x3a
 571 003c 0B       		.uleb128 0xb
 572 003d 3B       		.uleb128 0x3b
 573 003e 05       		.uleb128 0x5
 574 003f 49       		.uleb128 0x49
 575 0040 13       		.uleb128 0x13
 576 0041 00       		.byte	0
 577 0042 00       		.byte	0
 578 0043 06       		.uleb128 0x6
 579 0044 35       		.uleb128 0x35
 580 0045 00       		.byte	0
 581 0046 49       		.uleb128 0x49
 582 0047 13       		.uleb128 0x13
 583 0048 00       		.byte	0
 584 0049 00       		.byte	0
 585 004a 07       		.uleb128 0x7
 586 004b 2E       		.uleb128 0x2e
 587 004c 01       		.byte	0x1
 588 004d 3F       		.uleb128 0x3f
 589 004e 19       		.uleb128 0x19
 590 004f 03       		.uleb128 0x3
 591 0050 0E       		.uleb128 0xe
 592 0051 3A       		.uleb128 0x3a
 593 0052 0B       		.uleb128 0xb
 594 0053 3B       		.uleb128 0x3b
 595 0054 0B       		.uleb128 0xb
 596 0055 27       		.uleb128 0x27
 597 0056 19       		.uleb128 0x19
 598 0057 11       		.uleb128 0x11
 599 0058 01       		.uleb128 0x1
 600 0059 12       		.uleb128 0x12
 601 005a 06       		.uleb128 0x6
 602 005b 40       		.uleb128 0x40
 603 005c 18       		.uleb128 0x18
 604 005d 9742     		.uleb128 0x2117
 605 005f 19       		.uleb128 0x19
 606 0060 01       		.uleb128 0x1
 607 0061 13       		.uleb128 0x13
 608 0062 00       		.byte	0
 609 0063 00       		.byte	0
 610 0064 08       		.uleb128 0x8
 611 0065 34       		.uleb128 0x34
 612 0066 00       		.byte	0
 613 0067 03       		.uleb128 0x3
 614 0068 0E       		.uleb128 0xe
 615 0069 3A       		.uleb128 0x3a
 616 006a 0B       		.uleb128 0xb
 617 006b 3B       		.uleb128 0x3b
 618 006c 0B       		.uleb128 0xb
 619 006d 49       		.uleb128 0x49
 620 006e 13       		.uleb128 0x13
 621 006f 02       		.uleb128 0x2
 622 0070 17       		.uleb128 0x17
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 21


 623 0071 00       		.byte	0
 624 0072 00       		.byte	0
 625 0073 09       		.uleb128 0x9
 626 0074 898201   		.uleb128 0x4109
 627 0077 01       		.byte	0x1
 628 0078 11       		.uleb128 0x11
 629 0079 01       		.uleb128 0x1
 630 007a 31       		.uleb128 0x31
 631 007b 13       		.uleb128 0x13
 632 007c 00       		.byte	0
 633 007d 00       		.byte	0
 634 007e 0A       		.uleb128 0xa
 635 007f 8A8201   		.uleb128 0x410a
 636 0082 00       		.byte	0
 637 0083 02       		.uleb128 0x2
 638 0084 18       		.uleb128 0x18
 639 0085 9142     		.uleb128 0x2111
 640 0087 18       		.uleb128 0x18
 641 0088 00       		.byte	0
 642 0089 00       		.byte	0
 643 008a 0B       		.uleb128 0xb
 644 008b 34       		.uleb128 0x34
 645 008c 00       		.byte	0
 646 008d 03       		.uleb128 0x3
 647 008e 0E       		.uleb128 0xe
 648 008f 3A       		.uleb128 0x3a
 649 0090 0B       		.uleb128 0xb
 650 0091 3B       		.uleb128 0x3b
 651 0092 0B       		.uleb128 0xb
 652 0093 49       		.uleb128 0x49
 653 0094 13       		.uleb128 0x13
 654 0095 3F       		.uleb128 0x3f
 655 0096 19       		.uleb128 0x19
 656 0097 3C       		.uleb128 0x3c
 657 0098 19       		.uleb128 0x19
 658 0099 00       		.byte	0
 659 009a 00       		.byte	0
 660 009b 0C       		.uleb128 0xc
 661 009c 0F       		.uleb128 0xf
 662 009d 00       		.byte	0
 663 009e 0B       		.uleb128 0xb
 664 009f 0B       		.uleb128 0xb
 665 00a0 49       		.uleb128 0x49
 666 00a1 13       		.uleb128 0x13
 667 00a2 00       		.byte	0
 668 00a3 00       		.byte	0
 669 00a4 0D       		.uleb128 0xd
 670 00a5 2E       		.uleb128 0x2e
 671 00a6 00       		.byte	0
 672 00a7 3F       		.uleb128 0x3f
 673 00a8 19       		.uleb128 0x19
 674 00a9 3C       		.uleb128 0x3c
 675 00aa 19       		.uleb128 0x19
 676 00ab 6E       		.uleb128 0x6e
 677 00ac 0E       		.uleb128 0xe
 678 00ad 03       		.uleb128 0x3
 679 00ae 0E       		.uleb128 0xe
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 22


 680 00af 3A       		.uleb128 0x3a
 681 00b0 0B       		.uleb128 0xb
 682 00b1 3B       		.uleb128 0x3b
 683 00b2 0B       		.uleb128 0xb
 684 00b3 00       		.byte	0
 685 00b4 00       		.byte	0
 686 00b5 00       		.byte	0
 687              		.section	.debug_loc,"",%progbits
 688              	.Ldebug_loc0:
 689              	.LLST0:
 690 0000 0E010000 		.4byte	.LVL6
 691 0004 2A010000 		.4byte	.LVL7
 692 0008 0100     		.2byte	0x1
 693 000a 51       		.byte	0x51
 694 000b 00000000 		.4byte	0
 695 000f 00000000 		.4byte	0
 696              	.LLST1:
 697 0013 08000000 		.4byte	.LVL0
 698 0017 76000000 		.4byte	.LVL1
 699 001b 0100     		.2byte	0x1
 700 001d 52       		.byte	0x52
 701 001e CC000000 		.4byte	.LVL2
 702 0022 CE000000 		.4byte	.LVL3
 703 0026 0100     		.2byte	0x1
 704 0028 52       		.byte	0x52
 705 0029 EE000000 		.4byte	.LVL4
 706 002d FC000000 		.4byte	.LVL5
 707 0031 0100     		.2byte	0x1
 708 0033 52       		.byte	0x52
 709 0034 3C010000 		.4byte	.LVL8
 710 0038 50010000 		.4byte	.LVL9
 711 003c 0100     		.2byte	0x1
 712 003e 52       		.byte	0x52
 713 003f 96010000 		.4byte	.LVL10
 714 0043 98010000 		.4byte	.LVL11
 715 0047 0100     		.2byte	0x1
 716 0049 52       		.byte	0x52
 717 004a BC010000 		.4byte	.LVL12
 718 004e C1010000 		.4byte	.LVL13-1
 719 0052 0100     		.2byte	0x1
 720 0054 52       		.byte	0x52
 721 0055 C4010000 		.4byte	.LVL14
 722 0059 C6010000 		.4byte	.LVL15
 723 005d 0100     		.2byte	0x1
 724 005f 52       		.byte	0x52
 725 0060 00000000 		.4byte	0
 726 0064 00000000 		.4byte	0
 727              		.section	.debug_aranges,"",%progbits
 728 0000 1C000000 		.4byte	0x1c
 729 0004 0200     		.2byte	0x2
 730 0006 00000000 		.4byte	.Ldebug_info0
 731 000a 04       		.byte	0x4
 732 000b 00       		.byte	0
 733 000c 0000     		.2byte	0
 734 000e 0000     		.2byte	0
 735 0010 00000000 		.4byte	.LFB0
 736 0014 F8010000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 23


 737 0018 00000000 		.4byte	0
 738 001c 00000000 		.4byte	0
 739              		.section	.debug_ranges,"",%progbits
 740              	.Ldebug_ranges0:
 741 0000 00000000 		.4byte	.LFB0
 742 0004 F8010000 		.4byte	.LFE0
 743 0008 00000000 		.4byte	0
 744 000c 00000000 		.4byte	0
 745              		.section	.debug_line,"",%progbits
 746              	.Ldebug_line0:
 747 0000 C1000000 		.section	.debug_str,"MS",%progbits,1
 747      02006000 
 747      00000201 
 747      FB0E0D00 
 747      01010101 
 748              	.LASF17:
 749 0000 746D7043 		.ascii	"tmpCsr\000"
 749      737200
 750              	.LASF21:
 751 0007 4932435F 		.ascii	"I2C_1_slRdBufSize\000"
 751      315F736C 
 751      52644275 
 751      6653697A 
 751      6500
 752              	.LASF19:
 753 0019 4932435F 		.ascii	"I2C_1_slStatus\000"
 753      315F736C 
 753      53746174 
 753      757300
 754              	.LASF4:
 755 0028 6C6F6E67 		.ascii	"long int\000"
 755      20696E74 
 755      00
 756              	.LASF3:
 757 0031 73686F72 		.ascii	"short unsigned int\000"
 757      7420756E 
 757      7369676E 
 757      65642069 
 757      6E7400
 758              	.LASF20:
 759 0044 4932435F 		.ascii	"I2C_1_slRdBufPtr\000"
 759      315F736C 
 759      52644275 
 759      66507472 
 759      00
 760              	.LASF9:
 761 0055 666C6F61 		.ascii	"float\000"
 761      7400
 762              	.LASF16:
 763 005b 746D7038 		.ascii	"tmp8\000"
 763      00
 764              	.LASF1:
 765 0060 756E7369 		.ascii	"unsigned char\000"
 765      676E6564 
 765      20636861 
 765      7200
 766              	.LASF26:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 24


 767 006e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 767      43313120 
 767      352E342E 
 767      31203230 
 767      31363036 
 768 00a1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 768      20726576 
 768      6973696F 
 768      6E203233 
 768      37373135 
 769 00d4 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 769      66756E63 
 769      74696F6E 
 769      2D736563 
 769      74696F6E 
 770              	.LASF13:
 771 00fc 72656738 		.ascii	"reg8\000"
 771      00
 772              	.LASF5:
 773 0101 6C6F6E67 		.ascii	"long unsigned int\000"
 773      20756E73 
 773      69676E65 
 773      6420696E 
 773      7400
 774              	.LASF12:
 775 0113 75696E74 		.ascii	"uint8\000"
 775      3800
 776              	.LASF24:
 777 0119 4932435F 		.ascii	"I2C_1_slWrBufSize\000"
 777      315F736C 
 777      57724275 
 777      6653697A 
 777      6500
 778              	.LASF10:
 779 012b 646F7562 		.ascii	"double\000"
 779      6C6500
 780              	.LASF23:
 781 0132 4932435F 		.ascii	"I2C_1_slWrBufPtr\000"
 781      315F736C 
 781      57724275 
 781      66507472 
 781      00
 782              	.LASF29:
 783 0143 4932435F 		.ascii	"I2C_1_ISR\000"
 783      315F4953 
 783      5200
 784              	.LASF25:
 785 014d 4932435F 		.ascii	"I2C_1_slWrBufIndex\000"
 785      315F736C 
 785      57724275 
 785      66496E64 
 785      657800
 786              	.LASF18:
 787 0160 4932435F 		.ascii	"I2C_1_state\000"
 787      315F7374 
 787      61746500 
 788              	.LASF8:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 25


 789 016c 756E7369 		.ascii	"unsigned int\000"
 789      676E6564 
 789      20696E74 
 789      00
 790              	.LASF7:
 791 0179 6C6F6E67 		.ascii	"long long unsigned int\000"
 791      206C6F6E 
 791      6720756E 
 791      7369676E 
 791      65642069 
 792              	.LASF30:
 793 0190 43794861 		.ascii	"CyHalt\000"
 793      6C7400
 794              	.LASF28:
 795 0197 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\land-boards\\"
 795      73657273 
 795      5C48507A 
 795      3432305C 
 795      446F6375 
 796 01c4 4C422D52 		.ascii	"LB-RPPSOC\\RPPSOC-GPIO18Blink.cydsn\000"
 796      5050534F 
 796      435C5250 
 796      50534F43 
 796      2D475049 
 797              	.LASF15:
 798 01e7 73697A65 		.ascii	"sizetype\000"
 798      74797065 
 798      00
 799              	.LASF6:
 800 01f0 6C6F6E67 		.ascii	"long long int\000"
 800      206C6F6E 
 800      6720696E 
 800      7400
 801              	.LASF11:
 802 01fe 63686172 		.ascii	"char\000"
 802      00
 803              	.LASF2:
 804 0203 73686F72 		.ascii	"short int\000"
 804      7420696E 
 804      7400
 805              	.LASF27:
 806 020d 47656E65 		.ascii	"Generated_Source\\PSoC5\\I2C_1_INT.c\000"
 806      72617465 
 806      645F536F 
 806      75726365 
 806      5C50536F 
 807              	.LASF22:
 808 0230 4932435F 		.ascii	"I2C_1_slRdBufIndex\000"
 808      315F736C 
 808      52644275 
 808      66496E64 
 808      657800
 809              	.LASF14:
 810 0243 6C6F6E67 		.ascii	"long double\000"
 810      20646F75 
 810      626C6500 
 811              	.LASF0:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cccqIyJr.s 			page 26


 812 024f 7369676E 		.ascii	"signed char\000"
 812      65642063 
 812      68617200 
 813              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
